version: '2.2'
services:
  proxy-envoy:
    image: docker.loc:5000/envoyproxy/envoy:1.9.0-alpine
    volumes:
      - $PWD/dynamic-envoy.yaml:/etc/envoy/envoy.yaml:ro
    expose:
      - 8001
    ports:
      - 6000:6000      # redis
      - 6001:6001      # postgres
      - 6002:6002      # node
      - 8001:8001
      - 10000:10000
    dns:
      - 172.16.40.227
      - 192.168.1.217
    command: "/usr/local/bin/envoy -c /etc/envoy/envoy.yaml --service-cluster test --service-node master"
    #    environment:
    #      - loglevel=debug

  proxy-xds-server:
    image: docker.loc:5000/node:10-15.1-alpine
    environment:
      - "NPM_REGISTRY=https://registry.npmjs.org"
    expose:
      - 7777
    volumes:
      - $PWD/upstream:/app
    working_dir: /app
    command: sh -c "npm install; npm start"

  #  proxy-redis1:
#    image: docker.loc:5000/redis:4.0.8-alpine
#    expose:
#      - 6379
#
#  proxy-redis2:
#    image: docker.loc:5000/redis:4.0.8-alpine
#    expose:
#      - 6379
#
#  proxy-pg1-master:
#    image: docker.loc:5000/postgres:10.6
#    expose:
#      - 5432
#    volumes:
#      - $PWD/service/proxy-pg1-master:/var/lib/postgresql/data

  proxy-node1:
    image: docker.loc:5000/node:8.12.0-alpine
    working_dir: /app
    expose:
      - 3000
    volumes:
      - $PWD/service/proxy-node1:/app
    command:  sh -c "npm install; npm start"

  proxy-node2:
    image: docker.loc:5000/node:8.12.0-alpine
    working_dir: /app
    expose:
      - 3000
    volumes:
      - $PWD/service/proxy-node2:/app
    command:  sh -c "npm install; npm start"

networks:
  default:
  external:
    name: envoy_proxy
